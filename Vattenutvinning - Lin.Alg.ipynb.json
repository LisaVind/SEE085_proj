{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x117b7c850>]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "data= pd.read_csv(\"/Users/edvineng/Documents/Vinylcrackle/matte 2/CHALMERS/Programering/vattenuttag.csv\", sep=\";\")\n",
    "lista= np.array(data)\n",
    "\n",
    "xlist=[]\n",
    "ylist=[]\n",
    "\n",
    "for i in range(9):\n",
    "    x=lista[i, 0]\n",
    "    y=lista[i, 1]\n",
    "    xlist.append(x)\n",
    "    ylist.append(y)\n",
    "\n",
    "\n",
    "xx= np.linspace(1975, 2015)\n",
    "curvefit= np.polyfit(xlist, ylist, 4)\n",
    "yfunklist= np.polyval(curvefit, xx)\n",
    "\n",
    "plt.plot(xlist,ylist, \".\")\n",
    "plt.plot(xx, yfunklist)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
